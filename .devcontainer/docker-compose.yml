version: '3.8'

volumes:
  postgres-data:

    null
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        # [Choice] Go version 1, 1.16, 1.17
        # Append -bullseye or -buster to pin to an OS version.
        # Use -bullseye variants on local arm64/Apple Silicon.
        VARIANT: 1.19-bullseye
        # Options
        NODE_VERSION: "16"
    env_file:
      # Ensure that the variables in .env match the same variables in devcontainer.json
      - .env

    # Security Opt and cap_add allow for C++ based debuggers to work. 
    # See `runArgs`: https://github.com/Microsoft/vscode-docs/blob/main/docs/remote/devcontainerjson-reference.md
    #     security_opt:
    #       - seccomp:unconfined
    #     cap_add:
    #       - SYS_PTRACE

    volumes:
      - ..:/workspace:cached

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    network_mode: service:db
    # Uncomment the next line to use a non-root user for all processes.
    # user: vscode

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  db:
    image: postgres:14-bullseye
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      # Ensure that the variables in .env match the same variables in devcontainer.json
      - .env
    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)
  rabbitmq:
    image: rabbitmq:3.10-management-alpine
    restart: unless-stopped
    ports:
      - 5672:5672
      - 15672:15672
      - 5552:5552
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 10s
      retries: 5